openapi: 3.0.1
info:
  title: Shortener API
  description: API description in Markdown.
  version: 1.0.0
servers:
  - url: 'http://localhost'
paths:
  /auth/register:
    post:
      description: Register a new user
      requestBody:
        description: Email and password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
      responses:
        '200':
          description: OK
  /auth/login:
    post:
      description: Login
      requestBody:
        description: Email and password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
      responses:
        '200':
          description: OK
  /auth/logout:
    get:
      description: Logout
      responses:
        '200':
          description: OK

  /{hash}:
    get:
      description: Follow short url
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
            description: Hash to get full url and redirect
      responses:
        '302':
          description: Redirect to url
        '404':
          description: Not Found
  /short:
    get:
      description: Generate short url
      parameters:
        - name: url
          in: query
          required: true
          schema:
            type: string
            description: Full url to generate short url
            example: http://google.com
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Url'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationError'
  /short/list:
    get:
      description: Get url list
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UrlEntity'
  /short/delete/{id}:
    post:
      description: Delete user's short url by id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            description: Url's id (should get from /short/list method)
      responses:
        '200':
          description: OK

components:
  schemas:
    Url:
      type: object
      properties:
        url:
          type: string
          description: Short url
          example: 'http://localhost/abcdefgh'
    UrlEntity:
      type: object
      properties:
        id:
          type: integer
          example: 1
        url:
          type: string
          description: Original url
          example: 'http://example.com'
        shortUrl:
          type: string
          description: Short url
          example: 'http://localhost/abcdefgh'
    ValidationError:
      type: object
      properties:
        message:
          type: string
          description: Error message
          example: 'Invalid parameter example_param'
        value:
          type: string
          description: Invalid value
          example: '123'
    Credentials:
      type: object
      properties:
        email:
          type: string
          example: 'email@example.com'
        password:
          type: string
          example: 'password'